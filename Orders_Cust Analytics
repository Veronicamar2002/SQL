
-- How many orders were placed in January?
SELECT count(orderid) from BIT_DB.JanSales;

-- How many of those orders were for an iPhone?
SELECT count(orderid) from BIT_DB.JanSales WHERE Product='iPhone';

-- Select the customer account numbers for all the orders that were placed in February.
SELECT acctnum
FROM BIT_DB.customers AS customers
INNER JOIN BIT_DB.FebSales AS FebSales
ON customers.order_id=FebSales.orderID;

-- Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, price 
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

-- What is the total revenue for each product sold in January?
SELECT sum(quantity)*price as revenue, product
FROM BIT_DB.JanSales GROUP BY product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, 
how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity), SUM(Quantity)*Price as revenue 
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

-- How many customers ordered more than 2 products at a time in February, 
and what was the average amount spent for those customers?
SELECT 
count(cust.acctnum) AS CustCount, avg(quantity*price) AS AvgSpent
FROM BIT_DB.FebSales FebSales
LEFT JOIN BIT_DB.customers customers
ON FebSales.orderid=customers.order_id
WHERE FebSales.Quantity>2;

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY product;

-- Which locations in New York recieved at least 3 orders in January, and how many orders did they each receive?
SELECT location, SUM(orderID)
FROM BIT_DB.JanSales
WHERE location like '%NY%'
GROUP BY location
HAVING COUNT(orderID) > 2;

-- How many of each type of headphone were sold in February?
SELECT product, sum(quantity) as quantity
FROM BIT_DB.FebSales
WHERE product like '%Headphones%'
GROUP BY Product;

-- What was the average amount spent per account in February?
SELECT AVG(feb.price*feb.quantity) as FEB_AVGSpent
FROM BIT_DB.customers Cust
LEFT JOIN BIT_DB.FebSales Feb
ON Cust.order_id = Feb.orderid;

-- What was the average quantity of products purchased per account in February?
SELECT sum(quantity)/count(cust.acctnum) as FEB_AVGProduct
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderid = cust.order_id;

-- Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, sum(quantity*price)
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY sum(quantity*price) desc
LIMIT 1;

-- Top 10 popular songs (and their creators) on Spotify.
SELECT artist_name, track_name, popularity
FROM Spotifydata2021
ORDER BY popularity desc
LIMIT 10;

-- Top 10 popular artists on Spotify based on average song popularity.
SELECT artist_name, sum(popularity)/count(id) as AVG_Popularity
FROM BIT_DB.Spotifydata2021
GROUP BY artist_name
ORDER BY sum(popularity)/count(id) desc
LIMIT 10;

-- What is the average duration of the top 10 artists on Spotify?
SELECT artist_name, sum(duration_ms)/count(id) as AVG_Duration
FROM BIT_DB.Spotifydata2021
GROUP BY artist_name
ORDER BY sum(popularity)/count(id) desc
LIMIT 10;

-- What are the top 5 most danceable songs on Spotify?
SELECT track_name, danceability
FROM BIT_DB.Spotifydata2021
ORDER BY danceability desc
LIMIT 5;
